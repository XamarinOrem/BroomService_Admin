@model BroomServiceWeb.ViewModels.SubCategoryViewModel
@using BroomServiceWeb.Resources

@{
    ViewBag.Title = "Add Sub Service";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<h2 class="heading-top">@TempData["Title"]</h2>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-title">
                <a href="@Url.Action("SubCategoryList", "Category")"><i class="fa fa-arrow-left"></i><span>@Resource.sub_service_list</span></a>
            </div>
            <div class="card-body">
                <div class="basic-elements">

                    @using (Html.BeginForm("AddSubCategory", "Category", FormMethod.Post, new
                    { @class = "login-form", enctype = "multipart/form-data" }))
                    {
                    <form>
                        @if (Model == null)
                        {
                            <input type="hidden" name="SubCategoryId" id="SubCategoryId" />
                        }
                        else
                        {
                            <input value="@Model.Id" type="hidden" name="SubCategoryId" id="SubCategoryId" />
                        }
                        <div class="form-group">
                            <label>@Resource.image</label>
                            <br />
                            @if (Model != null && !string.IsNullOrEmpty(Model.Picture))
                            {
                                <img id="img_Picture" height="100" width="100"
                                     src="~/Images/SubCategory/@Model.Picture" data-zoom-image="~/Images/SubCategory/@Model.Picture" />

                            }
                            else
                            {
                                <img id="img_Picture" height="100" width="100"
                                     src="~/Content/images/image_placeholder.jpg" />
                            }


                            <input type="file" title="search image" id="file" name="file" style="margin-top:10px" />
                        </div>

                        <div class="form-group">
                            <label>@Resource.icon</label>
                            <br />
                            @if (Model != null && !string.IsNullOrEmpty(Model.Icon))
                            {
                                <img id="img_Icon" height="100" width="100"
                                     src="~/Images/SubCategory/@Model.Icon" data-zoom-image="~/Images/SubCategory/@Model.Icon" />

                            }
                            else
                            {
                                <img id="img_Icon" height="100" width="100"
                                     src="~/Content/images/image_placeholder.jpg" />
                            }


                            <input type="file" title="search image" id="fileIcon" name="fileIcon" style="margin-top:10px" />
                        </div>
                        <div class="form-group">
                            <label>@Resource.name</label>
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = Resource.enter_name
                           ,@id="Name",@required= "@required" })
                            @*@Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="form-group">
                            <label>@Resource.name (@Resource.french)</label>
                            @Html.TextBoxFor(m => m.Name_French, new { @class = "form-control", placeholder = Resource.enter_name
                       ,@required = "@required"
                       })
                        </div>

                        <div class="form-group">
                            <label>@Resource.name (@Resource.hebrew)</label>
                            @Html.TextBoxFor(m => m.Name_Hebrew, new { @class = "form-control", placeholder = Resource.enter_name,
                           @required = "@required" })
                        </div>

                        <div class="form-group">
                            <label>@Resource.name (@Resource.russian)</label>
                            @Html.TextBoxFor(m => m.Name_Russian, new { @class = "form-control", placeholder = Resource.enter_name,
                           @required = "@required" })
                        </div>
                        <div class="form-group">
                            <label>@Resource.description</label>
                            @Html.TextAreaFor(m => m.Description, new { @class = "form-control", placeholder = Resource.enter_description })
                            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger", required = "required" })
                        </div>

                        <div class="form-group">
                            <label>@Resource.description (@Resource.french)</label>
                            @Html.TextAreaFor(m => m.Description_French, new { @class = "form-control", placeholder = Resource.enter_description })
                            @Html.ValidationMessageFor(m => m.Description_French, "", new { @class = "text-danger", required = "required" })
                        </div>

                        <div class="form-group">
                            <label>@Resource.description (@Resource.hebrew)</label>
                            @Html.TextAreaFor(m => m.Description_Hebrew, new { @class = "form-control", placeholder = Resource.enter_description })
                            @Html.ValidationMessageFor(m => m.Description_Hebrew, "", new { @class = "text-danger", required = "required" })
                        </div>

                        <div class="form-group">
                            <label>@Resource.description (@Resource.russian)</label>
                            @Html.TextAreaFor(m => m.Description_Russian, new { @class = "form-control", placeholder = Resource.enter_description })
                            @Html.ValidationMessageFor(m => m.Description_Russian, "", new { @class = "text-danger", required = "required" })
                        </div>

                        @*<input hidden="hidden" name="HasPrice" id="HasPrice" value="@Model.HasPrice" />*@
                        <input hidden="hidden" name="HasSubSubCategoriesStr" id="HasSubSubCategoriesStr" value="@Model.HasSubSubCategoriesStr" />
                        <div class="form-group">
                            <label>@Resource.has_sub_sub_categories</label>
                            <input name="checkHasSubSubCategories" id="checkHasSubSubCategories" type="checkbox"
                                   checked="@Model.HasSubSubCategories" />
                        </div>

                        <div class="form-group">
                            <label>@Resource.service</label>
                            <br />
                            @Html.DropDownListFor(m => m.CategoryId, new SelectList(ViewBag.Categories, "Value", "Text")
                           , new { @class = "form-control" , @onchange = "FillCity()",@id= "CategoryId" })
                        </div>
                        <div id="dvPrice" style="display:block">
                            <div class="form-group">
                                <label>@Resource.price</label>
                                <input name="Price" id="Price" type="text" class="form-control" value="@Model.Price" />
                            </div>
                            <div class="form-group">
                                <label>@Resource.client_price</label>
                                <input name="ClientPrice" id="ClientPrice" type="text" class="form-control" value="@Model.ClientPrice" />
                            </div>
                        </div>
                        <button type="submit" class="btn btn-primary submit-button">@Resource.submit</button>
                    </form>


                        <br />
                        if (TempData["ErrorMsg"] != null)
                        {
                            <div class="alert alert-danger" role="alert">
                                @TempData["ErrorMsg"]
                            </div>
                        }
                        if (TempData["SuccessMsg"] != null)
                        {
                            <div class="alert alert-success" role="alert">
                                @TempData["SuccessMsg"]
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>


<!-- /.login-box-body -->
<script type="text/javascript"
        src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>

<script src="https://code.jquery.com/jquery-1.9.1.min.js"></script>
<script type="text/javascript">
    var hasCategoryPrice = false;
    function FillCity() {
        var hasSubSubCategories = $("#checkHasSubSubCategories").prop("checked");
        if (hasSubSubCategories == false) {
            var catId = $('#CategoryId').val();
            //alert(catId);


            @*$.ajax({
                url: "@Url.Action("HasPriceFromCat", "Category")",
                data: { catId: catId },
                dataType: "json",
                type: "GET",
                error: function () {
                    // alert(" An error occurred.");
                },
                success: function (data) {
                    $("#Price").val('');
                    $("#ClientPrice").val('');
                    //alert(data);
                    $("#HasPrice").val(data);
                    if (data == 'yes') {
                        hasCategoryPrice = true;
                        $("#dvPrice").show();
                    }
                    else {
                        hasCategoryPrice = false;
                        $("#dvPrice").hide();
                    }
                }
            });*@
        }
    }

    $(document).ready(function () {



        $('input[type="checkbox"]').click(function () {
            if ($(this).prop("checked") == true ) {
                $("#dvPrice").hide();
                $("#Price").val('');
                $("#ClientPrice").val('');
            }
            else if ($(this).prop("checked") == false) {
                $("#dvPrice").show();
            }
        });


        var hasSubSubCat = $("#checkHasSubSubCategories").prop("checked");
       // var hasprice = $("#HasPrice").val();
        // alert(hasprice);
        //if (hasprice == 'yes'  ) {
            //hasCategoryPrice = true;
            if (hasSubSubCat) {
                $("#dvPrice").hide();
            }
            else {
                $("#dvPrice").show();
            }
        //}
        //else {
        //    hasCategoryPrice = false;
        //    $("#dvPrice").hide();
       // }

        $('#file').on('change', function () {

            var input = this;
            var url = $(this).val();
            var ext = url.substring(url.lastIndexOf('.') + 1).toLowerCase();
            if (input.files && input.files[0] && (ext == "gif" || ext == "png" || ext == "jpeg" || ext == "jpg")) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#img_Picture').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
            else {
                $('#img_Picture').attr('src', '../Template/imgs/user_profle.png');
            }
        });

        $('#fileIcon').on('change', function () {

            var input = this;
            var url = $(this).val();
            var ext = url.substring(url.lastIndexOf('.') + 1).toLowerCase();
            if (input.files && input.files[0] && (ext == "gif" || ext == "png" || ext == "jpeg" || ext == "jpg")) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#img_Icon').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
            else {
                $('#img_Icon').attr('src', '../Template/imgs/user_profle.png');
            }
        });
        });
    $("form").submit(function (e) {
        var hasSubSubCategories = $("#checkHasSubSubCategories").prop("checked");
        if (hasSubSubCategories == true) {
            $("#HasSubSubCategoriesStr").val("true");
        }
        else {
            $("#HasSubSubCategoriesStr").val("false");
        }


        //var clientPrice = $("#ClientPrice").val();
        //var price = $("#Price").val();
        //var hasprice = $("#HasPrice").val();
        //if (hasprice == 'yes' && price == '' && hasSubSubCategories == false) {
        //        $("#Price").focus();
        //        e.preventDefault();
        //        return false;
        //    }
        //if (hasprice == 'yes' && clientPrice == '' && hasSubSubCategories == false) {
        //    $("#ClientPrice").focus();
        //    e.preventDefault();
        //    return false;
        //}
        var subCatId = $("#SubCategoryId").val();
        if (subCatId == '' || subCatId == 0) {
            var imgIcon = $('#img_Icon').attr('src');
            var imgPicture = $('#img_Picture').attr('src');

            if ($('#file').get(0).files.length === 0 && imgPicture == '/Content/images/image_placeholder.jpg') {
                alert("Choose Image");
                e.preventDefault();
                return false;
            }
            if ($('#fileIcon').get(0).files.length === 0 && imgIcon == '/Content/images/image_placeholder.jpg') {
                alert("Choose Icon");
                e.preventDefault();
                return false;
            }
        }
        });
</script>


